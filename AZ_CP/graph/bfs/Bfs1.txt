/*
-BASIC OF BFS
-print the nodes, in the order , the nodes are taken out from the queue
-print the distance of each node from the root-node
*/

#include<bits/stdc++.h>
using namespace std;

int n, m;
vector<vector<int>> g;
vector<int> vis;
vector<int> dis;

void bfs(int src_node) {
    queue<int> q;
    
    vis[src_node] = 1;
    dis[src_node] = 0;
    q.push(src_node);
    
    while (!q.empty()) {
        int node = q.front();//current node
        q.pop();
        for (auto v:g[node]) {//v is neighbor nodes of 'node', which is current node.
            if (!vis[v]) {
                vis[v] = 1;
                dis[v] = dis[node]+1;
                q.push(v);
            }
        }
    }
}

int main () {
    cin>>n>>m;
    g.resize(n+1);
    for (int i=0; i<m; i++) {
        int a, b;
        cin>>a>>b;
        g[a].push_back(b);
        g[b].push_back(a);
    }
    vis.assign(n+1, 0);
    dis.assign(n+1, 1e9);
    
    bfs(1);
    
    for (int i=1; i<=n; i++) {
        cout<<i<<": "<<vis[i]<<", "<<dis[i]<<endl;
    }
}
/*
-------------INPUT
5 4
1 2
2 3
3 4
4 1
*/